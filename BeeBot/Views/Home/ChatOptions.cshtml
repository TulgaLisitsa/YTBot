@using YTBot.Models
@model BeeBot.Models.BotUserSettings

@{
    var words = (List<string>)ViewBag.BannedWords;
}
<h2>Chat options</h2>
<hr />
<div class="card card-body bg-light ">
    <div class="row">
        <div class="col-md-12 mt-2 mb-3">
            <div class="pretty p-switch">
                <input class="" type="checkbox" value="" id="hidelinks" name="hidelinks">
                <div class="state p-primary">
                    <label class="form-check-label" for="hidelinks">
                        Hide links (will require !permit [username])
                    </label>
                </div>
            </div>
        </div>
        @*<div class="col-md-12 mt-2 mb-3">
            <div class="pretty p-switch">
                <input class="" type="checkbox" value="" id="subsonly" name="subsonly">
                <div class="state">
                    <label class="" for="subsonly">
                        Subs only chat
                    </label>
                </div>
            </div>
        </div>*@

        @*<div class="col-md-12 mt-2 mb-3">
            <div class="pretty p-switch">
                <input class="" type="checkbox" value="" id="slowchat" name="slowchat">
                <div class="state">
                    <label class="" for="slowchat">
                        Slow chat
                    </label>
                </div>
            </div>
        </div>*@


    </div>

<div class="row">
    <div class="col-md-12">
        Banned words:
    </div>

    <div class="col-md-12">
        <input class="form-control fullwidth bannedwords" type="text" name="bannedwords"  value="@string.Join(",",words)" />
    </div>

    <div class="col-md-12 mt-3">
        <button class="btn btn-light mt-2 loadbannedwordsbtn dontshow"><i class="fa fa-save"></i> Load default words</button>
        <button class="btn btn-secondary mt-2 savebannedwordsbtn "><i class="fa fa-save"></i> Save</button>
    </div>
</div>
</div>
<script type="text/javascript">
    $(document).ready(function () {
        // Onload spinner
        $(".maincontent").LoadingOverlay("show", {
            background: "rgba(0, 0, 0, 0.15)"
        });
    });
    var twitchHub = $.connection.twitchHub;

    (function () {
        // Defining a connection to the server hub.
        
        // Setting logging to true so that we can see whats happening in the browser console log. 
        $.connection.hub.logging = true;
        // Start the hub
        $.connection.hub.start().done(function () {
            twitchHub.server.getChatLimitations();
            $(".maincontent").LoadingOverlay("hide");
            }
        );

        $(".loadbannedwordsbtn").click(function () {
            $(this).hide();
            twitchHub.server.getDefaultBannedWords();
        });

        $(".savebannedwordsbtn").click(function () {
            twitchHub.server.saveBannedWords($(".bannedwords").val());
        });

        $("#hidelinks").click(function() {
            twitchHub.server.setChatLinksAllowed($(this).prop("checked"));
        });
        

        twitchHub.client.Fail = function (ret) {
            console.log(ret);
            $(".maincontent").LoadingOverlay("hide");

            console.log(ret.message);
            $.amaran({
                'theme': 'colorful',
                'content': {
                    bgcolor: '#ff3300',
                    color: '#fff',
                    message: ret.message,
                },
                'closeOnClick': false,
                'inEffect': 'slideTop'
            });
            
        }
        twitchHub.client.SetDefaultBannedWords = function(ret) {
            console.log(ret);

            $(".bannedwords").val(ret);
        }

        twitchHub.client.SavedBannedWords = function(ret) {
            if (ret.data == "1") {
                console.log(ret.message);
                $.amaran({
                    'theme': 'colorful',
                    'content'   :{
                        bgcolor:'#27ae60',
                        color:'#fff',
                        message: ret.message,
                    },
                    'closeOnClick':false,
                    'inEffect':'slideTop'
                });
                //});
            } else {
                console.log(ret.message);
                $.amaran({
                    'theme': 'colorful',
                    'content': {
                        bgcolor: '#ff3300',
                        color: '#fff',
                        message: ret.message,
                    },
                    'closeOnClick': false,
                    'inEffect': 'slideTop'
                });
            }
        }

        twitchHub.client.Notify = function (ret) {
            if (ret.data == "1") {
                console.log(ret.message);
                $.amaran({
                    'theme': 'colorful',
                    'content': {
                        bgcolor: '#27ae60',
                        color: '#fff',
                        message: ret.message,
                    },
                    'closeOnClick': false,
                    'inEffect': 'slideTop'
                });
                //});
            } else {
                console.log(ret.message);
                $.amaran({
                    'theme': 'colorful',
                    'content': {
                        bgcolor: '#ff3300',
                        color: '#fff',
                        message: ret.message,
                    },
                    'closeOnClick': false,
                    'inEffect': 'slideTop'
                });
            }
        }

        twitchHub.client.LoadChatLimitations = function (ret, linksAllowed) {
            $(".maincontent").LoadingOverlay("hide");

            if (!linksAllowed) {
                $("#hidelinks").prop("checked", "checked");
            } else {
                $("#hidelinks").prop("checked", "");
            }
            console.log(ret.HideChatLinks);
            console.log(ret.SubsOnly);

        }


    })()
</script>