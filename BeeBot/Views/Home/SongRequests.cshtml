<h2>Songrequests</h2>
<hr/>


<div class="row">
    <div class="col-md-12 ml-4">
        <label class="form-check-label col-form-label">
            <input id="modControlSong" class="form-check-input" type="checkbox" name="modControlSong" value="1">
            Mods can control play function?

        </label>
    </div>
</div>

<div class="row">
    <div class="col-md-6">

        <div id="ytplayer"></div>
        <div class="row">
            <div class="playcontrols col text-center">
                <div class="btn-group text-center">
                    <button class="btn btn-lg btn-outline-secondary" onclick="stopYt();"><i class="fa fa-stop"></i></button>
                    <button class="btn btn-lg btn-outline-secondary" onclick="playYt();"><i class="fa fa-play"></i></button>
                    <button class="btn btn-lg btn-outline-secondary" onclick="pauseYt();"><i class="fa fa-pause"></i></button>

                    <button class="btn btn-lg btn-outline-secondary" onclick="prevYt();"><i class="fa fa-backward"></i></button>
                    <button class="btn btn-lg btn-outline-secondary" onclick="nextYt();"><i class="fa fa-forward"></i></button>

                </div>
                <input id="repeat" type="checkbox" checked data-toggle="toggle" data-size="normal" data-width="140" data-height="32" data-on="<i class='fa fa-refresh'></i> Repeat" data-off="<i class='fa fa-refresh'></i> No repeat">
            </div>
        </div>
        <h4>Playlist</h4>
        <div class="playlist">
            
        </div>
    </div>

    <div class="col-md-6">
        <iframe frameborder="0"
                scrolling="no"
                id="chat_embed"
                src="http://www.twitch.tv/embed/@ViewBag.Channel/chat"
                height="750px"
                width="100%">

        </iframe>

    </div>


</div>

<div class="dontshow ">
    <div class="playlistitem row playlisttemplate" onclick="onPlaylystItemClick(this);">
        <div class="thumb col">
            <img src=""/>
        </div>
        <div class="col pull-left">
            <div class="dontshow id"></div>
            <div class="name videoname"></div>
            <div class="requester"></div>
        </div>
        <div class="col-1 ">
            <button class="btn btn-sm btn-danger" onclick="DeleteVideo(this)"><i class="fa fa-times"></i> </button>
        </div>
    </div>
</div>

<script>
    var twitchHub = $.connection.twitchHub;

    function VideoAlreadyInList(vid) {
        var any = $('.playlist').find(".id_" + vid.VideoId);
        if (any.length > 0) {
            return true;
        }
        return false;
    }

    function resetAllPlaying() {
        $.each($(".playlistitem"), function () {
            $(this).attr("data-playing", "false");
            $(this).attr("data-last", "false");
            $(this).removeClass("playing");
        });
    }

    function setThisAsPlaying(elem) {
        $(elem).toggleClass("playing");
        $(elem).attr("data-played", "true");
        $(elem).attr("data-playing", "true");
        $(elem).attr("data-last", "true");
        
    }

    function playVideoId(id) {
        $("#ytplayer")[0].src = "//www.youtube.com/embed/" + id + "?rel=0&autoplay=1";
    }

    function onPlaylystItemClick(elem) {
        resetAllPlaying();
        setThisAsPlaying(elem);

        var id = $(elem).attr("id");
        
        console.log("Playing: " + "//www.youtube.com/embed/" + id + "?rel=0&autoplay=1");
        playVideoId(id);
    }

    function DeleteVideo(elem) {
        $(this).preventDefault();
        var id = $(elem).parent().parent().attr("id");
        alert(id);

        
    }
    
    (function () {
        $.connection.hub.logging = true;
        // Start the hub
        $.connection.hub.start().done(function () {
            $('#modControlSong').change(function () {
                if (this.checked) {
                    twitchHub.server.updateModsCanControlPlaylist(this.checked);
                } else {
                    twitchHub.server.updateModsCanControlPlaylist(this.checked);
                }
        
            });

            setInterval(function() {
                    twitchHub.server.pollPlaylist();
                },
                3000);
        });

        twitchHub.client.UpdatePlaylist = function (ret) {

            if (VideoAlreadyInList(ret))
                return;

            var newItem = $(".playlisttemplate").clone();
            newItem.find("img").attr("src", "https://img.youtube.com/vi/" + ret.VideoId + "/0.jpg").attr("width", 80).attr("height", 60);
            newItem.find(".id").addClass("dontshow").addClass("id_" + ret.VideoId).html(ret.VideoId);
            newItem.attr("id", ret.VideoId);

            newItem.attr("data-played", "false");
            newItem.attr("data-playing", "false");

            newItem.find(".name").html(ret.Title);
            newItem.find(".requester").html(ret.RequestedBy);
            newItem.removeClass("playlisttemplate").removeClass("dontshow").appendTo(".playlist").slideDown("fast");


        }

        twitchHub.client.Test = function (ret) {
            alert("Test");
        }

        twitchHub.client.AddedPlaylist = function (ret) {
            if (ret.data == "1") {


                console.log(ret.message);
                $.amaran({
                    'theme': 'colorful',
                    'content': {
                        bgcolor: '#27ae60',
                        color: '#fff',
                        message: ret.message,
                    },
                    'closeOnClick': false,
                    'inEffect': 'slideTop',
                    'outEffect': 'slideLeft'
                });
                //});
            } else {
                console.log(ret.message);
                $.amaran({
                    'theme': 'colorful',
                    'content': {
                        bgcolor: '#ff3300',
                        color: '#fff',
                        message: ret.message,
                    },
                    'closeOnClick': false,
                    'inEffect': 'slideTop',
                    'outEffect': 'slideLeft'
                });
            }
        }

        twitchHub.client.Notify = function (ret) {
            if (ret.data == "1") {


                console.log(ret.message);
                $.amaran({
                    'theme': 'colorful',
                    'content': {
                        bgcolor: '#27ae60',
                        color: '#fff',
                        message: ret.message,
                    },
                    'closeOnClick': false,
                    'inEffect': 'slideTop',
                    'outEffect': 'slideLeft'
                });
                //});
            } else {
                console.log(ret.message);
                $.amaran({
                    'theme': 'colorful',
                    'content': {
                        bgcolor: '#ff3300',
                        color: '#fff',
                        message: ret.message,
                    },
                    'closeOnClick': false,
                    'inEffect': 'slideTop',
                    'outEffect': 'slideLeft'
                });
            }
        }

        twitchHub.client.onconnected = function () {
            console.log("connected...");
            $(".console").append("Connected...<br>");
        };


    })()

    // Load the IFrame Player API code asynchronously.
    var tag = document.createElement('script');
    tag.src = "https://www.youtube.com/player_api";
    var firstScriptTag = document.getElementsByTagName('script')[0];
    firstScriptTag.parentNode.insertBefore(tag, firstScriptTag);

    // Replace the 'ytplayer' element with an <iframe> and
    // YouTube player after the API code downloads.
    var player;
    function onYouTubePlayerAPIReady() {
        player = new YT.Player('ytplayer', {
            height: '375',
            width: '100%',
            videoId: 'M7lc1UVf-VE',
            events: {
                'onStateChange': onPlayerStateChange
            }
        });
    }

    function onPlayerStateChange(event) {
        //alert("onPlayerStateChange");
        console.log("onPlayerStateChange()");
        console.log('State is:', event.data);

        var playerStatus = event.data;

        console.log("playerStatus = " + playerStatus);
        if (playerStatus == -1) {
            // unstarted = gray
            console.log("YTstatus: unstarted");
        } else if (playerStatus == 0) {
            // ended = yellow
            console.log("YTstatus: ended");
            nextYt();
        } else if (playerStatus == 1) {
            // playing
            console.log("YTstatus: playing");
        } else if (playerStatus == 2) {
            // paused = red
            console.log("YTstatus: paused");
        } else if (playerStatus == 3) {
            // buffering = purple
            console.log("YTstatus: buffering");
        } else if (playerStatus == 5) {
            // video cued = orange
            console.log("YTstatus: cued");
        }
    }

    function ifRepeat() {
        return $("#repeat").is(':checked');
    }

    // Youtube player functions

    twitchHub.client.Play = function (item) {
        playYt();
    };
    twitchHub.client.Stop = function (item) {
        stopYt();
    };
    twitchHub.client.NextSong = function (item) {
        nextYt();
    };
    twitchHub.client.PrevSong = function (item) {
        prevYt();
    };

    function getFirstUnplayedVideo() {
        var video = $('[data-played="false"]');

        // TODO: check next sibligns for unplayed

        return video.first();
    }

    function getFirstVideo() {
        var video = $('.playlistitem');
        return video.first();
    }

    function getNextVideo() {
        var last = $('[data-last="true"]');

        return last.next();
    }

    function getNextUnplayedVideo() {
        var video = $('[data-played="false"]');
        
        return video.first();
    }

    function getPrevVideo() {
        var allVideos = $(".playlistitem").not(".playlisttemplate");
        var prevVideo = null;
        $.each(allVideos, function () {
            prevVideo = $(this);
            if ($(this).attr("data-last") == "true") {
                return true;
            }
        });
        //var prev = $('[data-playing="true"]');

        return prevVideo;
    }

    function getLastPlayedVideo() {
        var video = $('[data-last="true"]');
        return video;
    }

    function playYt() {
        var $video = getLastPlayedVideo();
        if ($video.length == 0) {
            $video = getFirstUnplayedVideo();
        }
        console.log("Playing: " + "//www.youtube.com/embed/" + $video.attr("id") + "?rel=0&autoplay=1");
        $("#ytplayer")[0].src = "//www.youtube.com/embed/" + $video.attr("id") + "?rel=0&autoplay=1";
        resetAllPlaying();
        setThisAsPlaying($video);
    }

    function stopYt() {
        var video = $("#ytplayer").attr("src").replace("&autoplay=1", "&autoplay=0");
        $("#ytplayer").attr("src", "");
        $("#ytplayer").attr("src", video);
        //player.stopVideo();
    }

    function nextYt() {
        var $video = getNextVideo();

        if ($video.length == 0) {
            if (ifRepeat()) {
                $video = getFirstVideo();
            }
        }


        console.log("Playing: " + "//www.youtube.com/embed/" + $video.attr("id") + "?rel=0&autoplay=1");
        $("#ytplayer")[0].src = "//www.youtube.com/embed/" + $video.attr("id") + "?rel=0&autoplay=1";
        resetAllPlaying();
        setThisAsPlaying($video);
        //playingEvent($video, null, null);
    }

    function prevYt() {
        var $video = getPrevVideo();

        if ($video.length == 0) {
            return;
        }

        console.log("Playing: " + "//www.youtube.com/embed/" + $video.attr("id") + "?rel=0&autoplay=1");
        $("#ytplayer")[0].src = "//www.youtube.com/embed/" + $video.attr("id") + "?rel=0&autoplay=1";
        resetAllPlaying();
        setThisAsPlaying($video);
        //playingEvent($video, null, null);
    }

    function pauseYt() {
        player.pauseVideo();
    }




</script>